@model GrapheneTrace.Models.AdminHomeViewModel
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser<int>> UserManager
@{
    ViewData["Title"] = "Admin Dashboard";
    var currentUserIdString = UserManager.GetUserId(User);
    int.TryParse(currentUserIdString, out var currentUserId);
}

<h1>@ViewData["Title"]</h1>

<div class="d-flex justify-content-between align-items-center mb-4">
    
    <h2 class="m-0">User Accounts</h2>

    <div class="d-flex align-items-center">
        
        <form asp-controller="Home" asp-action="AdminHome" method="get" class="me-2">
            <div class="input-group">
                <input type="text" name="searchString" class="form-control" placeholder="Search by ID, email, or role..." value="@ViewData["CurrentFilter"]" />
                <button type="submit" class="btn btn-primary">Search</button>
            </div>
        </form>

        <a class="btn btn-primary" asp-controller="Admin" asp-action="CreateUser">Create New User</a>

    </div>
</div>
<table class="table table-striped">
    <thead>
    <tr>
        <th>User ID</th>
        <th>Role</th>
        <th>User Email</th>
        <th>Actions</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var user in Model.Users)
    {
        <tr>
            <td>@user.Id</td>
            <td>@string.Join(", ", user.Roles)</td>
            <td>@user.Email</td>
            <td>
                <a class="btn btn-secondary btn-sm" asp-controller="Admin" asp-action="EditUser" asp-route-id="@user.Id">Edit</a>

                @if (user.Id != currentUserId)
                {
                    <a class="btn btn-danger btn-sm" asp-controller="Admin" asp-action="DeleteUser" asp-route-id="@user.Id">Delete</a>
                }
            </td>
        </tr>
    }
    </tbody>
</table>